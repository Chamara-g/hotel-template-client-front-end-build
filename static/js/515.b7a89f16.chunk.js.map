{"version":3,"file":"static/js/515.b7a89f16.chunk.js","mappings":"kQAEaA,EAAgC,mCAAG,WAC9CC,EACAC,GAF8C,4FAKxCC,EAAW,IAAIC,UAEVC,OAAO,UAAWJ,GAC3BE,EAASE,OAAO,OAAQH,GARoB,SAUrBI,GAAAA,CAAM,CAC3BC,OAAQ,OACRC,IAAI,GAAD,OAAKC,8DAAL,iCACHC,KAAMP,EACNQ,QAAS,CACPC,OAAQ,sBAfgC,uBAUpCF,EAVoC,EAUpCA,KAVoC,kBAmBrCA,GAnBqC,sCAqBxC,KAAMG,SArBkC,0CAsBnC,KAAMA,SAASH,MAtBoB,0DAAH,wDA6BhCI,EAAmC,mCAAG,WACjDb,EACAC,GAFiD,4FAK3CC,EAAW,IAAIC,UAEVC,OAAO,UAAWJ,GAC3BE,EAASE,OAAO,OAAQH,GARuB,SAUxBI,GAAAA,CAAM,CAC3BC,OAAQ,OACRC,IAAI,GAAD,OAAKC,8DAAL,2CACHC,KAAMP,EACNQ,QAAS,CACPC,OAAQ,sBAfmC,uBAUvCF,EAVuC,EAUvCA,KAVuC,kBAmBxCA,GAnBwC,sCAqB3C,KAAMG,SArBqC,0CAsBtC,KAAMA,SAASH,MAtBuB,0DAAH,yD,mHCgChD,IArDA,YAAyC,IAAzBT,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,KACvB,GAA8Ba,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAmBA,OAhBAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,GAAiCC,EAASC,GAAMmB,MAAK,SAACX,GACpD,IACMA,EAAI,SACiB,YAAnBA,EAAI,QACNO,EAAWP,EAAI,MACfS,GAAc,IACLT,EAAI,QAKjB,MAAOY,UAEV,CAACrB,EAASC,KAGX,8BACGgB,IACC,4BACE,SAAC,IAAD,CAAYK,SAAU,KAAtB,UACE,SAAC,IAAD,CACEC,MAAO,OACPC,OAAQ,OACRC,OAAQV,EACRW,aAAa,EACbC,UAAU,EACVC,cAAe,EACfC,UAAU,OAGd,SAAC,IAAD,CAAYC,SAAU,KAAtB,UACE,SAAC,IAAD,CACEP,MAAO,OACPC,OAAQ,OACRC,OAAQV,EACRW,aAAa,EACbC,UAAU,EACVC,cAAe,EACfC,UAAU,a,8IC1BxB,MAlBA,YAAkD,IAA5BE,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,MAC/B,OACE,gBAAKC,UAAU,+BAAf,UACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKF,UAAU,6CAAf,UACE,UAACG,EAAA,EAAD,CAAKC,GAAG,IAAR,WACE,wBAAKN,KACL,gBAAIE,UAAU,gBAAd,UACGF,EADH,mDAKHO,EAAAA,EAAAA,IAAgBN,S,UCTzB,MAJA,YAA4C,EAA3BD,UAA4B,IAAjBQ,EAAgB,EAAhBA,MAC1B,OAAO,+BAAGD,EAAAA,EAAAA,IAAgBC,MCiB5B,MAhBA,YAAuD,IAAlCvC,EAAiC,EAAjCA,QAASwC,EAAwB,EAAxBA,cAI5B,OAHArB,EAAAA,EAAAA,YAAU,WACRsB,OAAOC,SAAS,EAAG,KAClB,KAED,4BACE,SAAC,IAAD,CAAM1C,QAASA,EAASC,KAAK,YAC7B,SAAC,EAAD,CACE8B,UAAS,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAeG,KAC1BX,MAAK,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAeR,SAExB,SAAC,EAAD,CAAOD,UAAS,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAeG,KAAMJ,MAAK,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAeD,a","sources":["app/api/imageAPI.ts","app/hotel/component/hero/hero.tsx","app/hotel/component/about-hotel/about-hotel.tsx","app/hotel/component/other/other.tsx","app/hotel/page/hotel-home.tsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const getHeroImagesByHotelAndImageType = async (\r\n  hotelId: any,\r\n  type: string\r\n) => {\r\n  try {\r\n    let formData = new FormData();\r\n\r\n    formData.append('hotelId', hotelId);\r\n    formData.append('type', type);\r\n\r\n    const { data } = await axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_API_HOST}/image/readByHotelAndType.php`,\r\n      data: formData,\r\n      headers: {\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      return error.response.data; // => the response payload\r\n    } else {\r\n      //console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const getGalleryImagesByHotelAndImageType = async (\r\n  hotelId: any,\r\n  type: string\r\n) => {\r\n  try {\r\n    let formData = new FormData();\r\n\r\n    formData.append('hotelId', hotelId);\r\n    formData.append('type', type);\r\n\r\n    const { data } = await axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_API_HOST}/image/readGalleryImgByHotelAndType.php`,\r\n      data: formData,\r\n      headers: {\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      return error.response.data; // => the response payload\r\n    } else {\r\n      //console.log(error);\r\n    }\r\n  }\r\n};\r\n","import SimpleImageSlider from 'react-simple-image-slider';\r\nimport MediaQuery from 'react-responsive';\r\nimport { useEffect, useState } from 'react';\r\nimport { getHeroImagesByHotelAndImageType } from '../../../api/imageAPI';\r\n\r\ninterface props {\r\n  hotelId: number;\r\n  type: string;\r\n}\r\n\r\nfunction Hero({ hotelId, type }: props) {\r\n  const [heroImg, setHeroImg] = useState([]);\r\n  const [imgLoading, setImgLoading] = useState(false);\r\n\r\n  //get image list\r\n  useEffect(() => {\r\n    getHeroImagesByHotelAndImageType(hotelId, type).then((data) => {\r\n      try {\r\n        if (data['result']) {\r\n          if (data['result'] === 'SUCCESS') {\r\n            setHeroImg(data['data']);\r\n            setImgLoading(true);\r\n          } else if (data['result'] === 'FAILED') {\r\n          } else {\r\n          }\r\n        } else {\r\n        }\r\n      } catch (error) {}\r\n    });\r\n  }, [hotelId, type]);\r\n\r\n  return (\r\n    <>\r\n      {imgLoading && (\r\n        <div>\r\n          <MediaQuery minWidth={1224}>\r\n            <SimpleImageSlider\r\n              width={'100%'}\r\n              height={'70vh'}\r\n              images={heroImg}\r\n              showBullets={true}\r\n              showNavs={true}\r\n              slideDuration={1}\r\n              autoPlay={true}\r\n            />\r\n          </MediaQuery>\r\n          <MediaQuery maxWidth={1224}>\r\n            <SimpleImageSlider\r\n              width={'100%'}\r\n              height={'40vh'}\r\n              images={heroImg}\r\n              showBullets={true}\r\n              showNavs={true}\r\n              slideDuration={1}\r\n              autoPlay={true}\r\n            />\r\n          </MediaQuery>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import { Col, Container, Row } from 'react-bootstrap';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport './about-hotel.css';\r\n\r\ninterface props {\r\n  hotelName: string;\r\n  about: string;\r\n}\r\n\r\nfunction AboutHotel({ hotelName, about }: props) {\r\n  return (\r\n    <div className=\"hotel-about-us-div pt-5 pb-5\">\r\n      <Container>\r\n        <Row className=\"justify-content-md-center text-center mb-5\">\r\n          <Col lg=\"8\">\r\n            <h3>{hotelName}</h3>\r\n            <h4 className=\"about-us-head\">\r\n              {hotelName} - Todo Incluido - Cancún, México\r\n            </h4>\r\n          </Col>\r\n        </Row>\r\n        {ReactHtmlParser(about)}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutHotel;\r\n","import ReactHtmlParser from 'react-html-parser';\r\n\r\nimport './other.css';\r\n\r\ninterface props {\r\n  hotelName: string;\r\n  other: string;\r\n}\r\n\r\nfunction Other({ hotelName, other }: props) {\r\n  return <>{ReactHtmlParser(other)}</>;\r\n}\r\n\r\nexport default Other;\r\n","import { useEffect } from 'react';\r\n\r\nimport AboutHotel from '../component/about-hotel/about-hotel';\r\nimport Hero from '../component/hero/hero';\r\nimport Other from '../component/other/other';\r\n\r\ninterface props {\r\n  hotelMainData: any;\r\n  hotelId: number;\r\n}\r\n\r\nfunction HotelHome({ hotelId, hotelMainData }: props) {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Hero hotelId={hotelId} type=\"HOME_H\" />\r\n      <AboutHotel\r\n        hotelName={hotelMainData?.name}\r\n        about={hotelMainData?.about}\r\n      />\r\n      <Other hotelName={hotelMainData?.name} other={hotelMainData?.other} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HotelHome;\r\n"],"names":["getHeroImagesByHotelAndImageType","hotelId","type","formData","FormData","append","axios","method","url","process","data","headers","Accept","response","getGalleryImagesByHotelAndImageType","useState","heroImg","setHeroImg","imgLoading","setImgLoading","useEffect","then","error","minWidth","width","height","images","showBullets","showNavs","slideDuration","autoPlay","maxWidth","hotelName","about","className","Container","Row","Col","lg","ReactHtmlParser","other","hotelMainData","window","scrollTo","name"],"sourceRoot":""}