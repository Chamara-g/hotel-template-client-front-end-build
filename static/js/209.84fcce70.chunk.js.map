{"version":3,"file":"static/js/209.84fcce70.chunk.js","mappings":"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","sources":["app/api/imageAPI.ts","app/hotel/component/hero/hero.tsx","app/api/roomAPI.ts","app/hotel/component/accommodations-body/accommodations-body.tsx","app/hotel/page/accommodations-page.tsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const getHeroImagesByHotelAndImageType = async (\r\n  hotelId: any,\r\n  type: string\r\n) => {\r\n  try {\r\n    let formData = new FormData();\r\n\r\n    formData.append('hotelId', hotelId);\r\n    formData.append('type', type);\r\n\r\n    const { data } = await axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_API_HOST}/image/readByHotelAndType.php`,\r\n      data: formData,\r\n      headers: {\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      return error.response.data; // => the response payload\r\n    } else {\r\n      //console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const getGalleryImagesByHotelAndImageType = async (\r\n  hotelId: any,\r\n  type: string\r\n) => {\r\n  try {\r\n    let formData = new FormData();\r\n\r\n    formData.append('hotelId', hotelId);\r\n    formData.append('type', type);\r\n\r\n    const { data } = await axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_API_HOST}/image/readGalleryImgByHotelAndType.php`,\r\n      data: formData,\r\n      headers: {\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      return error.response.data; // => the response payload\r\n    } else {\r\n      //console.log(error);\r\n    }\r\n  }\r\n};\r\n","import SimpleImageSlider from 'react-simple-image-slider';\r\nimport MediaQuery from 'react-responsive';\r\nimport { useEffect, useState } from 'react';\r\nimport { getHeroImagesByHotelAndImageType } from '../../../api/imageAPI';\r\n\r\ninterface props {\r\n  hotelId: number;\r\n  type: string;\r\n}\r\n\r\nfunction Hero({ hotelId, type }: props) {\r\n  const [heroImg, setHeroImg] = useState([]);\r\n  const [imgLoading, setImgLoading] = useState(false);\r\n\r\n  //get image list\r\n  useEffect(() => {\r\n    getHeroImagesByHotelAndImageType(hotelId, type).then((data) => {\r\n      try {\r\n        if (data['result']) {\r\n          if (data['result'] === 'SUCCESS') {\r\n            setHeroImg(data['data']);\r\n            setImgLoading(true);\r\n          } else if (data['result'] === 'FAILED') {\r\n          } else {\r\n          }\r\n        } else {\r\n        }\r\n      } catch (error) {}\r\n    });\r\n  }, [hotelId, type]);\r\n\r\n  return (\r\n    <>\r\n      {imgLoading && (\r\n        <div>\r\n          <MediaQuery minWidth={1224}>\r\n            <SimpleImageSlider\r\n              width={'100%'}\r\n              height={'70vh'}\r\n              images={heroImg}\r\n              showBullets={true}\r\n              showNavs={true}\r\n              slideDuration={1}\r\n              autoPlay={true}\r\n            />\r\n          </MediaQuery>\r\n          <MediaQuery maxWidth={1224}>\r\n            <SimpleImageSlider\r\n              width={'100%'}\r\n              height={'40vh'}\r\n              images={heroImg}\r\n              showBullets={true}\r\n              showNavs={true}\r\n              slideDuration={1}\r\n              autoPlay={true}\r\n            />\r\n          </MediaQuery>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import axios from 'axios';\r\n\r\nexport const getRoomsByHotelId = async (hotelId: any) => {\r\n  try {\r\n    let formData = new FormData();\r\n\r\n    formData.append('hotelId', hotelId);\r\n\r\n    const { data } = await axios({\r\n      method: 'post',\r\n      url: `${process.env.REACT_APP_API_HOST}/room/readByHotelId.php`,\r\n      data: formData,\r\n      headers: {\r\n        Accept: 'application/json',\r\n      },\r\n    });\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      return error.response.data; // => the response payload\r\n    } else {\r\n      //console.log(error);\r\n    }\r\n  }\r\n};\r\n","import { Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport './accommodations-body.css';\r\n\r\ninterface props {\r\n  rooms: any[];\r\n}\r\n\r\nfunction AccommodationsBody({ rooms }: props) {\r\n  return (\r\n    <div className=\"accommodations-body-div pt-5 pb-5\">\r\n      <Container>\r\n        <Row className=\"justify-content-md-center text-center mb-5\">\r\n          <Col lg=\"8\">\r\n            <h1>Alojamientos</h1>\r\n          </Col>\r\n        </Row>\r\n        {rooms.map((room, i) => {\r\n          return (\r\n            <Row\r\n              className=\"justify-content-md-center room-detail-list mb-2\"\r\n              key={i}\r\n            >\r\n              <Col sm={4} className=\"text-left p-1\">\r\n                <img className=\"room-img\" src={room.url} alt=\"\"></img>\r\n              </Col>\r\n              <Col sm={8} className=\"text-left p-2\">\r\n                <h4 className=\"mb-2\">{room.name}</h4>\r\n                <ul className=\"accommodations-list\">\r\n                  {room.details.map((detail: any, j: any) => {\r\n                    return (\r\n                      <li key={j}>\r\n                        <i className=\"fa fa-check-circle\"></i> {detail}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </Col>\r\n            </Row>\r\n          );\r\n        })}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccommodationsBody;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { getRoomsByHotelId } from '../../api/roomAPI';\r\nimport AccommodationsBody from '../component/accommodations-body/accommodations-body';\r\nimport Hero from '../component/hero/hero';\r\n\r\ninterface props {\r\n  hotelId: number;\r\n}\r\n\r\nfunction AccommodationsPage({ hotelId }: props) {\r\n  const [accommodationDetails, setAccommodationDetails] = useState([]);\r\n  const [contentLoading, setContentLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  //get room list\r\n  useEffect(() => {\r\n    getRoomsByHotelId(hotelId).then((data) => {\r\n      try {\r\n        if (data['result']) {\r\n          if (data['result'] === 'SUCCESS') {\r\n            setAccommodationDetails(data['data']);\r\n            setContentLoading(true);\r\n          } else if (data['result'] === 'FAILED') {\r\n          } else {\r\n          }\r\n        } else {\r\n        }\r\n      } catch (error) {}\r\n    });\r\n  }, [hotelId]);\r\n\r\n  return (\r\n    <div>\r\n      <Hero hotelId={hotelId} type=\"ACMD_H\" />\r\n      {contentLoading && <AccommodationsBody rooms={accommodationDetails} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccommodationsPage;\r\n"],"names":["getHeroImagesByHotelAndImageType","hotelId","type","formData","FormData","append","axios","method","url","process","data","headers","Accept","response","getGalleryImagesByHotelAndImageType","useState","heroImg","setHeroImg","imgLoading","setImgLoading","useEffect","then","error","minWidth","width","height","images","showBullets","showNavs","slideDuration","autoPlay","maxWidth","getRoomsByHotelId","rooms","className","Container","Row","Col","lg","map","room","i","sm","src","alt","name","details","detail","j","accommodationDetails","setAccommodationDetails","contentLoading","setContentLoading","window","scrollTo"],"sourceRoot":""}